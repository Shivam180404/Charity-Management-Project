{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivam Srivastava\\\\New folder\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    console.log('AuthProvider - Checking authentication status');\n    const token = localStorage.getItem('token');\n    if (token) {\n      console.log('AuthProvider - Token found, verifying...');\n      axios.get('http://localhost:5000/api/auth/verify', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(() => {\n        console.log('AuthProvider - Token verified');\n        setIsAuthenticated(true);\n      }).catch(error => {\n        console.error('AuthProvider - Token verification failed:', error);\n        localStorage.removeItem('token');\n        setIsAuthenticated(false);\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      console.log('AuthProvider - No token found');\n      setLoading(false);\n    }\n  }, []);\n  const loginUser = async (email, password) => {\n    try {\n      console.log('AuthProvider - Attempting login');\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      setIsAuthenticated(true);\n      console.log('AuthProvider - Login successful');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('AuthProvider - Login failed:', error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n  const registerUser = async (name, email, password) => {\n    try {\n      console.log('AuthProvider - Attempting registration');\n      const response = await axios.post('http://localhost:5000/api/auth/register', {\n        name,\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      setIsAuthenticated(true);\n      console.log('AuthProvider - Registration successful');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('AuthProvider - Registration failed:', error);\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed'\n      };\n    }\n  };\n  const logoutUser = () => {\n    console.log('AuthProvider - Logging out');\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n  };\n  const value = {\n    isAuthenticated,\n    loading,\n    loginUser,\n    registerUser,\n    logoutUser\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"Ax+B/BOELR06clzL32vENhaokmk=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","loading","setLoading","console","log","token","localStorage","getItem","get","headers","Authorization","then","catch","error","removeItem","finally","loginUser","email","password","response","post","data","setItem","success","_error$response","_error$response$data","message","registerUser","name","_error$response2","_error$response2$data","logoutUser","value","className","fileName","_jsxFileName","lineNumber","columnNumber","Provider","_c","$RefreshReg$"],"sources":["C:/Users/Shivam Srivastava/New folder/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    console.log('AuthProvider - Checking authentication status');\n    const token = localStorage.getItem('token');\n    if (token) {\n      console.log('AuthProvider - Token found, verifying...');\n      axios.get('http://localhost:5000/api/auth/verify', {\n        headers: { Authorization: `Bearer ${token}` }\n      })\n      .then(() => {\n        console.log('AuthProvider - Token verified');\n        setIsAuthenticated(true);\n      })\n      .catch((error) => {\n        console.error('AuthProvider - Token verification failed:', error);\n        localStorage.removeItem('token');\n        setIsAuthenticated(false);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n    } else {\n      console.log('AuthProvider - No token found');\n      setLoading(false);\n    }\n  }, []);\n\n  const loginUser = async (email, password) => {\n    try {\n      console.log('AuthProvider - Attempting login');\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\n        email,\n        password,\n      });\n      const { token } = response.data;\n      localStorage.setItem('token', token);\n      setIsAuthenticated(true);\n      console.log('AuthProvider - Login successful');\n      return { success: true };\n    } catch (error) {\n      console.error('AuthProvider - Login failed:', error);\n      return { success: false, error: error.response?.data?.message || 'Login failed' };\n    }\n  };\n\n  const registerUser = async (name, email, password) => {\n    try {\n      console.log('AuthProvider - Attempting registration');\n      const response = await axios.post('http://localhost:5000/api/auth/register', {\n        name,\n        email,\n        password,\n      });\n      const { token } = response.data;\n      localStorage.setItem('token', token);\n      setIsAuthenticated(true);\n      console.log('AuthProvider - Registration successful');\n      return { success: true };\n    } catch (error) {\n      console.error('AuthProvider - Registration failed:', error);\n      return { success: false, error: error.response?.data?.message || 'Registration failed' };\n    }\n  };\n\n  const logoutUser = () => {\n    console.log('AuthProvider - Logging out');\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n  };\n\n  const value = {\n    isAuthenticated,\n    loading,\n    loginUser,\n    registerUser,\n    logoutUser,\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}