{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivam Srivastava\\\\New folder\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    loadUser();\n  }, []);\n  const registerUser = async userData => {\n    try {\n      const res = await fetch('/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setUser(data);\n        navigate('/');\n      } else {\n        console.error(data.message);\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error('Error registering user:', error);\n    }\n  };\n  const loginUser = async userData => {\n    try {\n      const res = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setUser(data);\n        navigate('/');\n      } else {\n        console.error(data.message);\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error('Error logging in:', error);\n    }\n  };\n  const logoutUser = async () => {\n    try {\n      await fetch('/api/auth/logout', {\n        method: 'GET'\n      });\n      setUser(null);\n      navigate('/login');\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n  const loadUser = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setUser({\n        token: token\n      });\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      registerUser,\n      loginUser,\n      logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","loadUser","registerUser","userData","res","fetch","method","headers","body","JSON","stringify","data","json","ok","console","error","message","alert","loginUser","logoutUser","token","localStorage","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shivam Srivastava/New folder/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  const registerUser = async (userData) => {\r\n    try {\r\n      const res = await fetch('/api/auth/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setUser(data);\r\n        navigate('/');\r\n      } else {\r\n        console.error(data.message);\r\n        alert(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error registering user:', error);\r\n    }\r\n  };\r\n\r\n  const loginUser = async (userData) => {\r\n    try {\r\n      const res = await fetch('/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setUser(data);\r\n        navigate('/');\r\n      } else {\r\n        console.error(data.message);\r\n        alert(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error logging in:', error);\r\n    }\r\n  };\r\n\r\n  const logoutUser = async () => {\r\n    try {\r\n      await fetch('/api/auth/logout', {\r\n        method: 'GET',\r\n      });\r\n      setUser(null);\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Error logging out:', error);\r\n    }\r\n  };\r\n\r\n  const loadUser = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      setUser({ token: token });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        registerUser,\r\n        loginUser,\r\n        logoutUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}